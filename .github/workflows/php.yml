name: CI/CD - Build and Deploy

on:
  push:
    branches: [ "main"    - name: Check Docker Swarm status
      run: |
        echo "üîÑ Checking Docker Swarm status..."
        docker info | grep -i swarm || true
        if ! docker info | grep -q "Swarm: active"; then
          echo "‚ö†Ô∏è  Swarm not active, initializing..."
          docker swarm init
        else
          echo "‚úÖ Swarm already active"
        fi    paths:
      - 'app/**'
      - 'modules/**'
      - 'Dockerfile'
      - 'docker-compose.yml'
      - 'composer.json'
      - 'composer.lock'
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

env:
  IMAGE_TAG: phpcodeigniter:latest

jobs:
  test:
    name: Test & Validate
    runs-on: self-hosted

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install PHP extensions
      run: |
        sudo apt-get update
        sudo apt-get install -y php8.3-dom php8.3-xml php8.3-mbstring

    - name: Validate composer.json and composer.lock
      run: composer validate --strict

    - name: Cache Composer packages
      id: composer-cache
      uses: actions/cache@v3
      with:
        path: vendor
        key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-php-

    - name: Install dependencies
      run: composer install --prefer-dist --no-progress

    # Descomente se tiver testes configurados
    # - name: Run test suite
    #   run: composer run-script test

  deploy:
    name: Build & Deploy
    runs-on: self-hosted
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Build Docker image
      run: |
        echo "üê≥ Building Docker image..."
        docker build -t ${{ env.IMAGE_TAG }} .
        docker tag ${{ env.IMAGE_TAG }} phpcodeigniter:${{ github.sha }}

    - name: Initialize Docker Swarm (if needed)
      run: |
        echo "ÔøΩ Checking Docker Swarm..."
        docker swarm init || echo "Swarm already initialized"

    - name: Deploy to Docker Swarm
      run: |
        echo "üöÄ Deploying stack to Docker Swarm..."
        docker stack deploy -c docker-compose.yml phpcodeigniter --with-registry-auth

    - name: Wait for deployment
      run: |
        echo "‚è≥ Waiting for services to start..."
        sleep 15

    - name: Verify deployment
      run: |
        echo "‚úÖ Verifying stack deployment..."
        docker stack services phpcodeigniter
        docker service ls --filter "label=com.docker.stack.namespace=phpcodeigniter"

    - name: Cleanup old images
      run: |
        echo "üßπ Cleaning up old images..."
        docker image prune -f
